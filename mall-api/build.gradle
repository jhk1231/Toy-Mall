plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.store.blog'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


ext {
    set('springBootVersion', '3.0.5')
    set('springCloudVersion', '2022.0.1')
    set('querydslDir', file("build/generated/querydsl"))
    set('snippetsDir', file("build/generated-snippets"))
    set('querydslVersion', '5.0.0')
    set('logback.version', '1.4.6')
    set('log4j2.version', '2.19.0')
    set('slf4j.version', '2.0.7')
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExtention
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas:3.0.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly "org.mariadb.jdbc:mariadb-java-client"
    //querydsl
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    //querydsl
    //lombok
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    //lombok
    asciidoctorExtention "org.springframework.restdocs:spring-restdocs-asciidoctor"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

def querydslDir = "${querydslDir}"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}


clean.doLast {
    file(querydslDir).deleteDir()
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

jar {
    enabled(false)
}

bootJar {
    enabled(true)
}

asciidoctor {
    configurations 'asciidoctorExtention'
    inputs.dir snippetsDir
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {    // gradle build 시 ./build/asciidoc/html5/ 에 html 파일생성
        into 'static/docs'                        // html 파일이 jar 안의 /static/docs/ 폴더로 복사됨
    }
    manifest {
        attributes(
                "Implementation-Title": "${project.name}",
                "Implementation-Version": "${project.version}"
        )
    }
}