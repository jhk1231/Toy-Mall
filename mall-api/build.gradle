plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.store.mall'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


ext {
    set('springBootVersion', '3.0.5')
    set('springCloudVersion', '2022.0.1')
    set('querydslDir', "$buildDir/generated/querydsl")
    set('snippetsDir', file("build/generated-snippets"))
    set('querydslVersion', '5.0.0')
    set('logback.version', '1.4.6')
    set('log4j2.version', '2.19.0')
    set('slf4j.version', '2.0.7')
//    set('asciidoctorConvertVersion', '3.0.0')
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom complieClasspath
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    implementation "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


test {
    outputs.dir snippetsDir
}

tasks.named('test') {
    useJUnitPlatform()
}


clean.doLast {
    file(querydslDir).deleteDir()
}

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}


compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

